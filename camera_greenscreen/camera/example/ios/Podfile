# Uncomment this line to define a global platform for your project
platform :ios, '11.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}
 
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do

  use_frameworks! 
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    platform :ios, '9.0'
    inherit! :search_paths
    # Pods for testing
    pod 'OCMock', '~> 3.8.1'
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    #This will not work as build rules are required to identify inut .air file from -fcikernel compilation
    #instead, pre-compile the shaders offline and add to the project and podspec as a Resource
    #using metal tool to compile metal source into air file.
    #xcrun -sdk iphoneos metal -c -target air64-apple-ios12.0 AAPLShaders.metal
    #using metallib tool to assemble air files into metallib file.
    #xcrun -sdk iphoneos metallib AAPLShaders.air -o AAPLShaders.metallib
    #
    #target.build_configurations.each do |config|
    # config.build_settings['Other Metal Compiler Flags'] = '-fcikernel'
    # config.build_settings['MTLLINKER_FLAGS'] = '-cikernel'
    # end
  end
end
